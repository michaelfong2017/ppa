#!/usr/bin/env python3# -*- coding: utf-8 -*-"""@author: michael"""import scrapyfrom scrapy.loader import ItemLoaderfrom budgetq.items import QuestionItemimport orjsonclass QuestionsSpider(scrapy.Spider):    name = 'questions'    # allowed_domains = ["https://budgetq.g0vhk.io/"]        start_urls = ['https://api.g0vhk.io/budget/meeting/2020/',                  'https://api.g0vhk.io/budget/meeting/2019/',                  'https://api.g0vhk.io/budget/meeting/2018/',                  'https://api.g0vhk.io/budget/meeting/2017/',                  'https://api.g0vhk.io/budget/meeting/2016/',                  'https://api.g0vhk.io/budget/meeting/2015/',                  'https://api.g0vhk.io/budget/meeting/2014/']        def parse(self, response):        json_object = orjson.loads(response.body)        for bureau in json_object:            year = bureau['year']            bureau_key = bureau['bureau']['bureau']            yield response.follow(f'https://api.g0vhk.io/budget/replies/{year}/{bureau_key}/?limit=10000', self.parse_menu)                def parse_menu(self, response):        json_object = orjson.loads(response.body)        json_data = json_object['data']        for bureau in json_data:            key = bureau['key']            yield response.follow(f'https://api.g0vhk.io/budget/replies/{key}/', self.parse_question)                def parse_question(self, response):        question = orjson.loads(response.body)        loader = ItemLoader(item = QuestionItem())        loader.add_value('key', question['key'])        loader.add_value('year', question['year'])        loader.add_value('bureau', question['bureau'])        loader.add_value('head', question['head'])        loader.add_value('head_number', question['head_number'])        loader.add_value('sub_head', question['sub_head'])        try:            loader.add_value('sub_head_number', question['sub_head_number'])        except KeyError:            pass        loader.add_value('controlling_officer_title', question['controlling_officer_title'])        loader.add_value('controlling_officer_name', question['controlling_officer_name'])        loader.add_value('programme', question['programme'])        loader.add_value('reply_serial_no', question['reply_serial_no'])        loader.add_value('member', question['member'])        loader.add_value('director', question['director'])        loader.add_value('member_question_no', question['member_question_no'])        loader.add_value('question', question['question'])        loader.add_value('answer', question['answer'])                yield loader.load_item()